% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spot_plot.R
\name{spot_plot}
\alias{spot_plot}
\title{Spatial plots of discrete or continuous features for stitched-together
capture areas.}
\usage{
spot_plot(
  spe,
  sample_id,
  image_id = "lowres",
  title = sprintf("\%s_\%s", sample_id, var_name),
  var_name,
  multi_gene_method = c("z_score", "pca", "sparsity"),
  include_legend = TRUE,
  is_discrete,
  colors = NULL,
  assayname = "logcounts",
  minCount = 0.5,
  spatial = FALSE
)
}
\arguments{
\item{spe}{A \code{SpatialExperiment} with colData column \code{exclude_overlapping},
passed to \code{spatialLIBD::vis_gene} or \code{spatialLIBD::vis_clus}}

\item{sample_id}{character(1) passed to \code{sampleid} in
\code{spatialLIBD::vis_gene} or \code{spatialLIBD::vis_clus}. Assumed to be a
donor, possibly consisting of several capture areas to plot at once}

\item{image_id}{character(1) giving the name of the image (e.g. "lowres") to
plot, used both to determine an appropriate spot size and passed to
\code{spatialLIBD::vis_gene} or \code{spatialLIBD::vis_clus}}

\item{title}{character(1) giving the title of the plot}

\item{var_name}{character() passed to \code{geneid} for \code{spatialLIBD::vis_gene}
or character(1) passed to \code{clustervar} for \code{spatialLIBD::vis_clus}}

\item{multi_gene_method}{A \code{character(1)}: either "pca", "sparsity", or
"z_score". This parameter controls how multiple continuous variables are
combined for visualization, and only applies when \code{var_name} has length > 1
and \code{is_discrete} is FALSE}

\item{include_legend}{logical(1): if FALSE, remove the plot legend}

\item{is_discrete}{logical(1): if TRUE, use \code{spatialLIBD::vis_clus};
otherwise, use \code{spatialLIBD::vis_gene}}

\item{colors}{character() of colors passed to \code{colors} for \code{spatialLIBD::vis_clus}
if \code{is_discrete} or otherwise to \code{cont_colors} for \code{spatialLIBD::vis_gene}}

\item{assayname}{character(1) passed to \code{spatialLIBD::vis_gene} if
not \code{is_discrete}}

\item{minCount}{numeric(1) passed to passed to \code{spatialLIBD::vis_gene} if
not \code{is_discrete}}

\item{spatial}{logical(1) passed to \code{sampleid} in
\code{spatialLIBD::vis_gene} or \code{spatialLIBD::vis_clus}}
}
\value{
A \code{ggplot} object containing a "spot plot" of the specified sample
}
\description{
This function is essentially a wrapper around spatialLIBD::vis_clus and
spatialLIBD::vis_gene, suitable for merged samples (each sample in the
SpatialExperiment 'spe' is a donor consisting of multiple capture areas, with
colData column 'exclude_overlapping' indicating overlapping spots to drop (to
prevent overplotting).
}
\details{
Spot sizes are \emph{almost} consistent among donors, regardless of full-
resolution image dimensions, when title is NULL, include_legend is FALSE,
and the plot is saved to a square output (e.g. PDF with 7in width and
height). However, ggplot does not seem to scale plots of different aspect
ratios exactly consistently when writing to PDF (untested for other formats)
}
\examples{

#   Grab an example SpatialExperiment and suppose all of its spots should be
#   plotted (for spatialNAc, 'exclude_overlapping' will only have genuinely
#   overlapping spots be TRUE)
spe <- if (!exists("spe")) {
    spatialLIBD::fetch_data(type = "spatialDLPFC_Visium_example_subset")
}
spe$exclude_overlapping <- FALSE

#   Plot age spatially for the first sample
sample_id <- unique(spe$sample_id)[1]
p <- spot_plot(
    spe,
    sample_id = sample_id,
    title = sample_id, var_name = "age",
    include_legend = TRUE, is_discrete = FALSE, minCount = 0,
    assayname = "logcounts"
)
print(p)

#    Define several markers for white matter
white_matter_genes <- c(
    "ENSG00000197971", "ENSG00000131095", "ENSG00000123560",
    "ENSG00000171885"
)

#   Plot multiple white matter genes simultaneously for the first sample.
#   Use the "pca" method for combining them
p <- spot_plot(
    spe,
    sample_id = sample_id,
    title = sample_id, var_name = white_matter_genes,
    multi_gene_method = "pca", include_legend = TRUE, is_discrete = FALSE,
    minCount = 0, assayname = "logcounts"
)
print(p)
}
\author{
Nicholas J. Eagles
}
